# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Model AI yang digunakan untuk generate RPP"""
enum AiModel {
  EmiliaAiV1
  EmiliaAiV2
  EmiliaAiV3
  GEMINI
  OPENAI
  SweetV1
}

type AlurKegiatanPembelajaran {
  inti: KegiatanDetail!
  pendahuluan: KegiatanDetail!
  penutup: KegiatanDetail!
}

type AsesmenPembelajaran {
  diagnostik: String!
  formatif: String!
  sumatif: String!
}

input BahanAjarDto {
  kelas: String!
  mata_pelajaran: String!
  materi: String!
}

type BahanAjarResponse {
  bahan_ajar: String
  data: String
  message: String
  status: String!
}

input CreateRppInput {
  ai_model: AiModel = GEMINI
  alokasi_waktu: String
  capaian_pembelajaran: String
  catatan: String
  domain_konten: String
  institusi: String
  jenjang: String
  jumlah_peserta: String
  kelas: String
  konten_utama: String
  mata_pelajaran: String
  model_pembelajaran: String
  nama_penyusun: String
  pemahaman_bermakna: String
  prasyarat: String
  profil_pelajar: String
  sarana: String
  sumber_belajar: String
  tahapan: String
  tahun_pembuatan: String
  target_peserta: String
  tujuan_pembelajaran: String
}

type EducationBahanAjarResponse {
  bahan_ajar: String
  data: String
  message: String
  status: String!
}

type EducationKisiKisiResponse {
  data: String
  kisi_kisi: String
  message: String
  status: String!
}

type EducationQuestionsResponse {
  data: String
  message: String
  questions: String
  status: String!
}

type EducationRppResponse {
  data: String
  message: String
  rpp: String
  status: String!
}

input EnglishLessonDto {
  alokasi_waktu: String!
  capaian_pembelajaran: String
  catatan: String
  domain_konten: String!
  institusi: String
  jenjang: String!
  jumlah_peserta: String
  kelas: String!
  konten_utama: String!
  mata_pelajaran: String!
  model_pembelajaran: String
  nama_penyusun: String
  pemahaman_bermakna: String
  prasyarat: String
  profil_pelajar: String
  sarana: String
  sumber_belajar: String
  tahapan: String!
  tahun_pembuatan: String
  target_peserta: String
  tujuan_pembelajaran: String!
}

type KegiatanDetail {
  deskripsi: String!
  durasi: String!
}

type KegiatanPembelajaran {
  deskripsi: String!
  kegiatan: String!
}

input KisiKisiDto {
  kelas: String!
  mata_pelajaran: String!
  materi: String!
}

type KisiKisiResponse {
  data: String
  kisi_kisi: String
  message: String
  status: String!
}

input LessonDto {
  alokasi_waktu: String!
  capaian_pembelajaran: String
  catatan: String
  domain_konten: String!
  institusi: String
  jenjang: String!
  jumlah_peserta: String
  kelas: String!
  konten_utama: String!
  mata_pelajaran: String!
  model_pembelajaran: String
  nama_penyusun: String
  pemahaman_bermakna: String
  prasyarat: String
  profil_pelajar: String
  sarana: String
  sumber_belajar: String
  tahapan: String!
  tahun_pembuatan: String
  target_peserta: String
  tujuan_pembelajaran: String!
}

type MateriPembelajaran {
  inti: [KegiatanPembelajaran!]!
  pendahuluan: [KegiatanPembelajaran!]!
  penutup: [KegiatanPembelajaran!]!
}

type Mutation {
  createRpp(input: CreateRppInput!): Rpp!
  generateBahanAjar(input: BahanAjarDto!): EducationBahanAjarResponse!
  generateEnglishLesson(data: EnglishLessonDto!): RppResponse!
  generateKisiKisi(input: KisiKisiDto!): EducationKisiKisiResponse!
  generateLesson(input: LessonDto!): EducationRppResponse!
  generateQuestions(input: QuestionsDto!): EducationQuestionsResponse!
}

type Query {
  getTokenUsage: TokenUsageInfo!
  hello: String!
}

input QuestionsDto {
  jumlah: String
  kelas: String!
  mata_pelajaran: String!
  materi: String!
}

type QuestionsResponse {
  data: String
  message: String
  questions: String
  status: String!
}

type RefleksiGuru {
  pencapaian_tujuan: String!
  strategi_perbaikan: String!
  tantangan: String!
}

type Rpp {
  alokasi_waktu: String!
  alur_kegiatan_pembelajaran: AlurKegiatanPembelajaran!
  asesmen_pembelajaran: AsesmenPembelajaran!
  capaian_pembelajaran: String
  catatan: String
  domain_konten: String
  id: ID!
  institusi: String
  jenjang: String
  jumlah_peserta: String
  kelas: String
  kelas_semester: String!
  konten_utama: String
  mataPelajaran: String!
  mata_pelajaran: String
  materi_pembelajaran: MateriPembelajaran!
  materi_pokok: String!
  model_pembelajaran: String
  nama_penyusun: String
  pemahaman_bermakna: String
  prasyarat: String
  profil_pelajar: String
  profil_pelajar_pancasila: [String!]!
  refleksi_guru: RefleksiGuru!
  sarana: String
  satuan_pendidikan: String!
  sumber_belajar: String
  sumber_dan_media_pembelajaran: SumberDanMediaPembelajaran!
  tahapan: String
  tahun_pembuatan: String
  target_peserta: String
  tujuan_pembelajaran: String
  tujuan_pembelajaran_list: [String!]!
}

type RppResponse {
  data: String
  message: String
  rpp: String
  status: String!
}

type SumberDanMediaPembelajaran {
  buku: [String!]!
  media_digital: [String!]!
  metode: [String!]!
}

type TokenUsageInfo {
  completionTokens: Float!
  promptTokens: Float!
  totalTokens: Float!
}